<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
<!--
	수정일          수성자                          수정내용
   ==========      ========      =================================================
   2011.09.19		이기하			filter 정리
   2013.05.31		이기하			미사용 filter 정리(.mdo, .action)

  ************************************************************************************************
	0. 로그인 정책 컴포넌트용 필터 : 주석
	1. 스프링 시큐리티 설정 : 주석
	2. EgovSSO 로그인/로그아웃 설정을 위한 필터 설정 : 주석
	3. Spring Security 로그인/로그아웃 설정을 위한 필터 설정 : 주석
  ************************************************************************************************
-->
    <display-name>egovframework default</display-name>
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<!-- 
    <filter>
        <filter-name>HTMLTagFilter</filter-name>
        <filter-class>egovframework.com.cmm.filter.HTMLTagFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HTMLTagFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
    
    <!-- lucy-xss-filter --> 
	<filter>
		<filter-name>xssEscapeServletFilter</filter-name>
		<filter-class>com.navercorp.lucy.security.xss.servletfilter.XssEscapeServletFilter</filter-class>
	</filter>
	<filter-mapping>
    	<filter-name>xssEscapeServletFilter</filter-name>
    	<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 잉카인터넷 - 마우스입력 --> 	 
    <servlet>
		<servlet-name>PluginFreeServlet</servlet-name>
		<servlet-class>com.nprotect.pluginfree.PluginFreeServlet</servlet-class>
		<init-param>
			<param-name>PropertiesPath</param-name>
			<param-value>%WEB-INF%/nProtect/nprotect.properties</param-value> 
		</init-param>
		<init-param>
			<param-name>ResponseEncoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>PluginFreeServlet</servlet-name>
		<url-pattern>/nppfs.servlet.do</url-pattern>
	</servlet-mapping>
    
	<!-- Restoration from HTMLTagFilter's action (certification login) -->
 	<!--
    <filter>
        <filter-name>CertProcessFilter</filter-name>
        <filter-class>egovframework.com.utl.sec.filter.CertProcessFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CertProcessFilter</filter-name>
        <url-pattern>/utl/sec/certLogin.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CertProcessFilter</filter-name>
        <url-pattern>/utl/sec/certInfoPopup.do</url-pattern>
    </filter-mapping>
    -->

	<!-- 0. 로그인 정책 컴포넌트용 필터 -->
	<!--
    <filter>
        <filter-name>LoginPolicyFilter</filter-name>
        <filter-class>egovframework.com.uat.uap.filter.EgovLoginPolicyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LoginPolicyFilter</filter-name>
        <url-pattern>/uat/uia/actionLogin.do</url-pattern>
    </filter-mapping>
     -->

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:egovframework/spring/com/context-*.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>action</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/config/egovframework/springmvc/egov-com-*.xml</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>action</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <!-- 2015.06.01 김은삼 [1] 설정 추가 BEGIN -->
    <!-- 사용안하여 주석처리 2020.02.11
    <servlet>
        <servlet-name>simpleCaptcha</servlet-name>
        <servlet-class>nl.captcha.servlet.SimpleCaptchaServlet</servlet-class>
        <init-param>
            <param-name>width</param-name>
            <param-value>52</param-value>
        </init-param>
        <init-param>
            <param-name>height</param-name>
            <param-value>25</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>simpleCaptcha</servlet-name>
        <url-pattern>/simpleCaptchaImage</url-pattern>
    </servlet-mapping> -->
    <!-- 2015.06.01 김은삼 [1] 설정 추가 END -->
    
    <!--  
    <resource-ref>
		<res-ref-name>jdbc/openapiDB</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref> -->
	

  	<!-- 1. 스프링 시큐리티 설정-->
  	<!--
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>
    -->

  	<!-- 2. EgovSSO 로그아웃 설정을 위한 필터 설정 -->
    <!--
    <filter>
    	<filter-name>EgovSSOLogoutFilter</filter-name>
    	<filter-class>egovframework.com.uat.sso.filter.EgovSSOLogoutFilter</filter-class>
		<init-param>
			<description>SSO Global Logout 처리후 반환되는 페이지 설정</description>
			<param-name>returnURL</param-name>
			<param-value>/j_spring_security_logout</param-value>
		</init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>EgovSSOLogoutFilter</filter-name>
    	<url-pattern>/uat/uia/actionLogout.do</url-pattern>
  	</filter-mapping>
  	-->

  	<!-- 2. EgovSSO 로그인 설정을 위한 필터 설정 -->
    <!--
    <filter>
    	<filter-name>EgovSSOLoginFilter</filter-name>
    	<filter-class>egovframework.com.uat.sso.filter.EgovSSOLoginFilter</filter-class>
  	</filter>
  	<filter-mapping>
    	<filter-name>EgovSSOLoginFilter</filter-name>
    	<url-pattern>*.do</url-pattern>
  	</filter-mapping>
  	-->

  	<!-- 3. Spring Security 로그아웃 설정을 위한 필터 설정 -->
  	<!--
  	<filter>
    	<filter-name>EgovSpringSecurityLogoutFilter</filter-name>
    	<filter-class>egovframework.com.sec.security.filter.EgovSpringSecurityLogoutFilter</filter-class>
  	</filter>
  	<filter-mapping>
    	<filter-name>EgovSpringSecurityLogoutFilter</filter-name>
    	<url-pattern>/uat/uia/actionLogout.do</url-pattern>
  	</filter-mapping>
  	-->

  	<!-- 3. Spring Security 로그인 설정을 위한 필터 설정 -->
  	<!--
  	<filter>
    	<filter-name>EgovSpringSecurityLoginFilter</filter-name>
    	<filter-class>egovframework.com.sec.security.filter.EgovSpringSecurityLoginFilter</filter-class>
		<init-param>
			<description>로그인 실패시 반활 될 URL설정</description>
			<param-name>loginURL</param-name>
			<param-value>/uat/uia/egovLoginUsr.do</param-value>
		</init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>EgovSpringSecurityLoginFilter</filter-name>
    	<url-pattern>*.do</url-pattern>
  	</filter-mapping>
  	-->

    <!-- AjaxTags configuration START-->
    <servlet>
        <servlet-name>ajaxServlet</servlet-name>
        <servlet-class>net.sourceforge.ajaxtags.servlets.SourceLoader</servlet-class>
        <init-param>
            <param-name>prefix</param-name>
            <param-value>/ajaxtags</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>ajaxServlet</servlet-name>
        <url-pattern>/ajaxtags/js/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ajaxServlet</servlet-name>
        <url-pattern>/ajaxtags/img/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ajaxServlet</servlet-name>
        <url-pattern>/ajaxtags/css/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <login-config>
        <auth-method>BASIC</auth-method>
    </login-config>

    <session-config>
        <session-timeout>60</session-timeout>
        <!-- 22.04.22/jhKim - 쿠키 보안옵션 추가 -->
        <!--<cookie-config>
            <http-only>true</http-only>
        </cookie-config>-->
    </session-config>

    <error-page>
      <error-code>403</error-code>
      <location>/error.jsp</location>
    </error-page>
    <error-page>
      <error-code>404</error-code>
      <location>/error.jsp</location>
    </error-page>
    <error-page>
      <error-code>500</error-code>
      <location>/error.jsp</location>
    </error-page>
    
    <listener>
    	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    
    <!-- JEUS JNDI 설정시 사용 
    
	<resource-ref>
	    <res-ref-name>jdbc/OPENAPP</res-ref-name>
	    <res-type>javax.sql.DataSource</res-type>
	    <res-auth>Container</res-auth>
	</resource-ref> -->
	
	<!-- 국회사무처 운영/개발 JNDI  -->
	
	<!-- <resource-ref>
        <res-ref-name>opnapp2019</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
    </resource-ref> -->

</web-app>