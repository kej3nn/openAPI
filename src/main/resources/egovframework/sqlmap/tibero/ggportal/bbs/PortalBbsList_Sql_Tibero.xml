<?xml version="1.0" encoding="UTF-8"?>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- @(#)PortalBbsList_Sql_Tibero.xml 1.0 2015/06/15                         -->
<!--                                                                         -->
<!-- COPYRIGHT (C) 2013 WISEITECH CO., LTD. ALL RIGHTS RESERVED.             -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- 게시판 내용을 관리하는 SQL 파일이다.                                    -->
<!--                                                                         -->
<!-- @author 김은삼                                                          -->
<!-- @version 1.0 2015/06/15                                                 -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<sqlMap namespace="PortalBbsListDao">
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Type Alias                                                          -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <typeAlias alias="params" type="egovframework.common.base.model.Params" />
    <typeAlias alias="record" type="egovframework.common.base.model.Record" />
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용을 검색한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 상단 데이터 -->
    <select id="PortalBbsListDao.searchBbsListUpper" parameterClass="params" resultClass="record">
    	/* SQL ID : PortalBbsListDao.searchBbsListUpper */
         SELECT NULL                               AS "rowNum",
                B.BBS_TYPE_CD                      AS "bbsTypeCd",
                A.BBS_CD                           AS "bbsCd",
                A.SEQ                              AS "seq",
                A.NOTICE_YN                        AS "noticeYn",
                (
                     SELECT to_number(MIN(C.FILE_SEQ))
                       FROM TB_BBS_FILE      C
                      WHERE C.BBS_CD         = A.BBS_CD
                        AND C.SEQ            = A.SEQ
                        AND C.TOP_YN         = 'Y'
                        AND C.DEL_YN         = 'N'
                )                                  AS "fileSeq",
                A.BBS_TIT                          AS "bbsTit",
                B.HL_CNT                           AS "hlCnt",
                <![CDATA[
                CASE
                WHEN SYSDATE - A.USER_DTTM < 3
                THEN 'Y'
                ELSE 'N'
                END                                AS "newYn",
                ]]>
                A.SECRET_YN                        AS "secretYn",
                CASE A.SECRET_YN
                WHEN 'Y'
                THEN CASE
                     WHEN A.USER_CD IS NOT NULL
                     THEN CASE A.USER_CD
                          WHEN #regId:NUMERIC#
                          THEN 'N'
                          ELSE 'U'
                          END
                     ELSE 'P'
                     END
                ELSE 'N'
                END                                AS "lockTag",
                A.FILE_CNT                         AS "fileCnt",
                (
                    SELECT COUNT(*)
                      FROM TB_BBS_LIST       C
                     WHERE C.P_SEQ           = A.SEQ
                       AND C.DEL_YN          = 'N'
                )                                  AS "ansCnt",
                A.ANS_STATE                        AS "ansState",
                FN_GET_BBSANS_NM(B.ANS_TAG , ANS_STATE , 'P') AS "ansStateNm",
                A.USER_NM                          AS "userNm",
                TO_CHAR(A.USER_DTTM, 'YYYY-MM-DD') AS "userDttm",
                A.VIEW_CNT                         AS "viewCnt",
                CASE
                WHEN B.BBS_TYPE_CD = 'G004'
                THEN A.BBS_CONT
                WHEN B.BBS_CD      = 'GALLERY'
                THEN A.BBS_CONT
                END                                AS "bbsCont",
                (
                     SELECT AVG(C.APPR_VAL)
                       FROM TB_BBS_LIST_APPR C
                      WHERE C.BBS_CD         = A.BBS_CD
                        AND C.SEQ            = A.SEQ
                )                                  AS "apprVal"
           FROM TB_BBS_LIST  A
           JOIN TB_BBS_ADMIN B
             ON B.BBS_CD     = A.BBS_CD
            AND B.USE_YN     = 'Y'
          WHERE A.BBS_CD     = #bbsCd:VARCHAR#
            AND A.P_SEQ      = '0'
            AND A.NOTICE_YN  = 'Y'
            AND A.DEL_YN     = 'N'
          ORDER BY
                A.USER_DTTM DESC,
                A.SEQ       DESC
    </select>
    <!-- 검색 조건절 -->
    <sql id="PortalBbsListDao.searchBbsListWhere">
        <isEqual property="noticeYn" compareValue="Y">
          WHERE A.BBS_CD                 = #bbsCd:VARCHAR#
            <isEmpty property="pSeq">
            AND A.P_SEQ                  = '0'
            </isEmpty>
            <isNotEmpty property="pSeq">
            AND A.P_SEQ                  = #pSeq#
            </isNotEmpty>
            AND A.NOTICE_YN              = 'Y'
            AND A.DEL_YN                 = 'N'
        </isEqual>
        <isNotEqual property="noticeYn" compareValue="Y">
          WHERE A.BBS_CD                 = #bbsCd:VARCHAR#
            <isEmpty property="pSeq">
            AND A.P_SEQ                  = '0'
            </isEmpty>
            <isNotEmpty property="pSeq">
            AND A.P_SEQ                  = #pSeq#
            </isNotEmpty>
            AND A.NOTICE_YN              = 'N'
            AND A.DEL_YN                 = 'N'
            <isNotEmpty property="listSubCd">
            AND A.LIST_SUB_CD            = #listSubCd#
            </isNotEmpty>
            <isNotEmpty property="searchWord">
            <isEmpty property="searchType">
            <isEqual property="bbsCd" compareValue="FAQ01">
            AND (
                    UPPER(A.BBS_TIT)  LIKE '%'||UPPER(#searchWord#)||'%' OR
                    UPPER(A.BBS_CONT) LIKE '%'||UPPER(#searchWord#)||'%'
                )
            </isEqual>
            <isNotEqual property="bbsCd" compareValue="FAQ01">
            AND (
                    UPPER(A.BBS_TIT)  LIKE '%'||UPPER(#searchWord#)||'%' OR
                    UPPER(A.BBS_CONT) LIKE '%'||UPPER(#searchWord#)||'%' OR
                    UPPER(A.USER_NM)  LIKE '%'||UPPER(#searchWord#)||'%'
                )
            </isNotEqual>
            </isEmpty>
            <isNotEmpty property="searchType">
            <isEqual property="searchType" compareValue="bbsTit">
            AND UPPER(A.BBS_TIT)      LIKE '%'||UPPER(#searchWord:VARCHAR#)||'%'
            </isEqual>
            <isEqual property="searchType" compareValue="bbsCont">
            AND UPPER(A.BBS_CONT)     LIKE '%'||UPPER(#searchWord:VARCHAR#)||'%'
            </isEqual>
            <isEqual property="searchType" compareValue="userNm">
            AND UPPER(A.USER_NM)      LIKE '%'||UPPER(#searchWord:VARCHAR#)||'%'
            </isEqual>
            <isEqual property="searchType" compareValue="bbsTit+bbsCont">
            AND (
                    UPPER(A.BBS_TIT)  LIKE '%'||UPPER(#searchWord:VARCHAR#)||'%' OR
                    UPPER(A.BBS_CONT) LIKE '%'||UPPER(#searchWord:VARCHAR#)||'%'
                )
            </isEqual>
            <isEqual property="searchType" compareValue="bbsTit+userNm">
            AND (
                    UPPER(A.BBS_TIT)  LIKE '%'||UPPER(#searchWord:VARCHAR#)||'%' OR
                    UPPER(A.USER_NM)  LIKE '%'||UPPER(#searchWord:VARCHAR#)||'%'
                )
            </isEqual>
            </isNotEmpty>
            </isNotEmpty>
            <isNotEmpty property="myUserCd">
            AND A.USER_CD = #myUserCd:NUMERIC#
            </isNotEmpty>
			<isEqual property="bbsCd" compareValue="GALLERY">
				<isNotEmpty property="schInputVal">
					<isEmpty property="schInputGubun">
					AND ( UPPER(A.BBS_TIT) LIKE '%' || UPPER(#schInputVal:VARCHAR#) || '%'
						OR UPPER(A.BBS_CONT) LIKE '%' || UPPER(REPLACE(#schInputVal:VARCHAR#, ' ', '')) || '%'
						OR UPPER(A.USER_NM) LIKE '%' || UPPER(REPLACE(#schInputVal:VARCHAR#, ' ', '')) || '%' )
					</isEmpty>
	            <isEqual property="schInputGubun" compareValue="bbsTit">
	            AND UPPER(A.BBS_TIT)      LIKE '%'||UPPER(#schInputVal:VARCHAR#)||'%'
	            </isEqual>
	            <isEqual property="schInputGubun" compareValue="bbsCont">
	            AND UPPER(A.BBS_CONT)     LIKE '%'||UPPER(#schInputVal:VARCHAR#)||'%'
	            </isEqual>
	            <isEqual property="schInputGubun" compareValue="userNm">
	            AND UPPER(A.USER_NM)      LIKE '%'||UPPER(#schInputVal:VARCHAR#)||'%'
	            </isEqual>
	            <isEqual property="schInputGubun" compareValue="bbsTit+bbsCont">
	            AND (
	                    UPPER(A.BBS_TIT)  LIKE '%'||UPPER(#schInputVal:VARCHAR#)||'%' OR
	                    UPPER(A.BBS_CONT) LIKE '%'||UPPER(#schInputVal:VARCHAR#)||'%'
	                )
	            </isEqual>
	            <isEqual property="schInputGubun" compareValue="bbsTit+userNm">
	            AND (
	                    UPPER(A.BBS_TIT)  LIKE '%'||UPPER(#schInputVal:VARCHAR#)||'%' OR
	                    UPPER(A.USER_NM)  LIKE '%'||UPPER(#schInputVal:VARCHAR#)||'%'
	                )
	            </isEqual>
            </isNotEmpty>
			</isEqual>
			<isNotEqual property="bbsCd" compareValue="GALLERY">
	            <isNotEmpty property="schArrCateId" prepend=" AND ">
					<iterate property="schArrCateId" prepend=" A.LIST1_SUB_CD IN " open="(" close=")" conjunction=", ">
						#schArrCateId[]#
					</iterate>
				</isNotEmpty>
			</isNotEqual>
            <isNotEmpty property="schArrUsedId" prepend=" AND ">
				<iterate property="schArrUsedId" prepend=" A.LIST_SUB_CD IN " open="(" close=")" conjunction=", ">
					#schArrUsedId[]#
				</iterate>
			</isNotEmpty>
        </isNotEqual>
        <isEqual property="bbsCd" compareValue="GALLERY">
        	<isEmpty property="myUserCd">
        	AND A.ANS_STATE				= 'AK'
        	</isEmpty>
        </isEqual>
    </sql>
    <!-- 검색 데이터 -->
    <select id="PortalBbsListDao.searchBbsList" parameterClass="params" resultClass="record" remapResults="true">
        <isEqual property="paging" compareValue="0">
         SELECT A.ROW_NUM                          AS "rowNum",
                A.BBS_TYPE_CD                      AS "bbsTypeCd",
                A.BBS_CD                           AS "bbsCd",
                A.SEQ                              AS "seq",
                A.NOTICE_YN                        AS "noticeYn",
                (
                     SELECT MIN(B.FILE_SEQ)
                       FROM TB_BBS_FILE      B
                      WHERE B.BBS_CD         = A.BBS_CD
                        AND B.SEQ            = A.SEQ
                        AND B.TOP_YN         = 'Y'
                        AND B.DEL_YN         = 'N'
                )                                  AS "fileSeq",
                A.BBS_TIT                          AS "bbsTit",
                A.HL_CNT                           AS "hlCnt",
                <![CDATA[
                CASE
                WHEN SYSDATE - A.USER_DTTM < 3
                THEN 'Y'
                ELSE 'N'
                END                                AS "newYn",
                ]]>
                A.SECRET_YN                        AS "secretYn",
                CASE A.SECRET_YN
                WHEN 'Y'
                THEN CASE
                     WHEN A.USER_CD IS NOT NULL
                     THEN CASE A.USER_CD
                          WHEN #regId:NUMERIC#
                          THEN 'N'
                          ELSE 'U'
                          END
                     ELSE 'P'
                     END
                ELSE 'N'
                END                                AS "lockTag",
                A.FILE_CNT                         AS "fileCnt",
                (
                    SELECT COUNT(*)
                      FROM TB_BBS_LIST       B
                     WHERE B.P_SEQ           = A.SEQ
                       AND B.DEL_YN          = 'N'
                )                                  AS "ansCnt",
                A.ANS_STATE                        AS "ansState",
                FN_GET_BBSANS_NM(A.ANS_TAG , ANS_STATE , 'P') AS "ansStateNm",
                A.USER_NM                          AS "userNm",
                TO_CHAR(A.USER_DTTM, 'YYYY-MM-DD') AS "userDttm",
                A.VIEW_CNT                         AS "viewCnt",
                CASE
                WHEN A.BBS_TYPE_CD = 'G004'
                THEN A.BBS_CONT
                WHEN A.BBS_CD      = 'GALLERY'
                THEN A.BBS_CONT
                END                                AS "bbsCont",
                A.APPR_VAL                         AS "apprVal",
                A.LIST_SUB_CD					   AS "listSubCd",
                A.LIST1_SUB_CD					   AS "list1SubCd",
                A.LIST_SUB_NM					   AS "listSubNm",
                A.LIST1_SUB_NM					   AS "list1SubNm", 
                A.TOP_CATE_ID                      AS "cateId",
               (SELECT CATE_NM FROM TB_OPEN_CATE WHERE CATE_ID = A.TOP_CATE_ID ) AS "cateNm"
           FROM (
                     SELECT ROWNUM        AS ROW_NUM,
                            A.BBS_TYPE_CD AS BBS_TYPE_CD,
                            A.BBS_CD      AS BBS_CD,
                            A.SEQ         AS SEQ,
                            A.NOTICE_YN   AS NOTICE_YN,
                            A.BBS_TIT     AS BBS_TIT,
                            A.HL_CNT      AS HL_CNT,
                            A.SECRET_YN   AS SECRET_YN,
                            A.FILE_CNT    AS FILE_CNT,
                            A.ANS_TAG     AS ANS_TAG,
                            A.ANS_STATE   AS ANS_STATE,
                            A.USER_CD     AS USER_CD,
                            A.USER_NM     AS USER_NM,
                            A.USER_DTTM   AS USER_DTTM,
                            A.VIEW_CNT    AS VIEW_CNT,
                            A.BBS_CONT    AS BBS_CONT,
                            A.APPR_VAL    AS APPR_VAL,   
                            A.LIST_SUB_CD AS LIST_SUB_CD,
                            A.LIST1_SUB_CD AS LIST1_SUB_CD,
                            A.LIST_SUB_NM  AS LIST_SUB_NM,
                            A.LIST1_SUB_NM  AS LIST1_SUB_NM,
                            A.TOP_CATE_ID
                       FROM (
        </isEqual>
                                 SELECT * FROM (SELECT B.BBS_TYPE_CD AS BBS_TYPE_CD,
                                        A.BBS_CD      AS BBS_CD,
                                        A.SEQ         AS SEQ,
                                        ROW_NUMBER() OVER (PARTITION BY A.SEQ ORDER BY D.INF_ID) AS RN ,
                                        A.NOTICE_YN   AS NOTICE_YN,
                                        A.BBS_TIT     AS BBS_TIT,
                                        B.HL_CNT      AS HL_CNT,
                                        A.SECRET_YN   AS SECRET_YN,
                                        A.FILE_CNT    AS FILE_CNT,
                                        B.ANS_TAG     AS ANS_TAG,
                                        A.ANS_STATE   AS ANS_STATE,
                                        A.USER_CD     AS USER_CD,
                                        A.USER_NM     AS USER_NM,
                                        A.USER_DTTM   AS USER_DTTM,
                                        A.VIEW_CNT    AS VIEW_CNT,
                                        A.LIST_SUB_CD    AS LIST_SUB_CD,
                                        A.LIST1_SUB_CD    AS LIST1_SUB_CD,
                                        (
						                    SELECT C.DITC_NM
						                      FROM TB_COMM_CODE      C
						                     WHERE C.GRP_CD          = B.LIST_CD
						                       AND C.DITC_CD         = A.LIST_SUB_CD
						                )  								  AS "LIST_SUB_NM",
						                (
						                    SELECT C.DITC_NM
						                      FROM TB_COMM_CODE      C
						                     WHERE C.GRP_CD          = B.LIST1_CD
						                       AND C.DITC_CD         = A.LIST1_SUB_CD
						                )  								  AS "LIST1_SUB_NM",
                                        CASE
                                        WHEN B.BBS_TYPE_CD = 'G004'
                                        THEN A.BBS_CONT
                                        WHEN B.BBS_CD      = 'GALLERY'
                                        THEN A.BBS_CONT
                                        END           AS BBS_CONT,
                                        (SELECT AVG(B.APPR_VAL) 
			                               FROM TB_BBS_LIST_APPR B 
			                              WHERE B.BBS_CD = A.BBS_CD 
			                                    AND B.SEQ = A.SEQ 
			                             ) AS APPR_VAL,
                                   	<isEqual property="bbsCd" compareValue="GALLERY">     
                                        CASE WHEN D.TOP_CATE_ID IS NULL THEN 'NA99999'
                            				 ELSE  D.TOP_CATE_ID
                            			END AS TOP_CATE_ID
                            		</isEqual>	
                            		<isNotEqual property="bbsCd" compareValue="GALLERY">
                            			D.TOP_CATE_ID
                            		</isNotEqual>	
                                   FROM TB_BBS_LIST  A
                                   JOIN TB_BBS_ADMIN B
                                     ON B.BBS_CD     = A.BBS_CD
                                    AND B.USE_YN     = 'Y'
                                    LEFT JOIN TB_BBS_INF C ON
									 A.SEQ = C.SEQ
									LEFT JOIN TV_MNG_INF D ON
									 C.INF_ID = D.INF_ID
                                        <include refid="PortalBbsListDao.searchBbsListWhere" />
                                  ORDER BY 
                                        A.USER_DTTM DESC,
                                        A.SEQ       DESC)
                                    WHERE RN = 1
                                    <isEqual property="bbsCd" compareValue="GALLERY">   
	                                    <isNotEmpty property="schArrCateId" prepend=" AND ">
											<iterate property="schArrCateId" prepend=" TOP_CATE_ID IN " open="(" close=")" conjunction=", ">
												#schArrCateId[]#
											</iterate>
										</isNotEmpty>
									</isEqual>
									<!-- 데이터 정렬 -->
									<isNotEmpty property="schVOrder" prepend=" ORDER BY ">
										<isEqual property="schVOrder" compareValue="N">
											BBS_TIT, SEQ
										</isEqual>
										<isEqual property="schVOrder" compareValue="D">
											USER_DTTM DESC, SEQ
										</isEqual>
										<isEqual property="schVOrder" compareValue="V">
											VIEW_CNT , SEQ
										</isEqual>
										<isEqual property="schVOrder" compareValue="G">
											APPR_VAL, SEQ
										</isEqual>
									</isNotEmpty>
									<isEmpty property="schVOrder"  prepend=" ORDER BY ">
							                SEQ DESC
									</isEmpty>
        <isEqual property="paging" compareValue="0">
        <![CDATA[
                            )       A
                      WHERE ROWNUM <= #end:NUMERIC#
                )          A
          WHERE A.ROW_NUM >= #start:NUMERIC#
        ]]>
        </isEqual>
    </select>
    <!-- 검색 카운트 -->
    <select id="PortalBbsListDao.searchBbsListCount" parameterClass="params" resultClass="int">
        SELECT COUNT(*) 
          FROM (
          	SELECT 
         		  ROW_NUMBER() OVER (PARTITION BY A.SEQ ORDER BY D.INF_ID) AS RN
         		  <isEqual property="bbsCd" compareValue="GALLERY">     
                  	, CASE WHEN D.TOP_CATE_ID IS NULL THEN 'NA99999'
                    	   ELSE  D.TOP_CATE_ID
                           END AS TOP_CATE_ID
                  </isEqual> 
           	  FROM TB_BBS_LIST  A
              JOIN TB_BBS_ADMIN B
                ON B.BBS_CD     = A.BBS_CD
               AND B.USE_YN     = 'Y'
              LEFT JOIN TB_BBS_INF C 
                ON A.SEQ = C.SEQ
			  LEFT JOIN TV_MNG_INF D 
			  ON C.INF_ID = D.INF_ID
                <include refid="PortalBbsListDao.searchBbsListWhere" />
            ) 
            WHERE RN = 1
            <isEqual property="bbsCd" compareValue="GALLERY">   
            	<isNotEmpty property="schArrCateId" prepend=" AND ">
					<iterate property="schArrCateId" prepend=" TOP_CATE_ID IN " open="(" close=")" conjunction=", ">
						#schArrCateId[]#
					</iterate>
				</isNotEmpty>
			</isEqual>    
    </select>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 사용자 비밀번호를 조회한다.                                         -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <select id="PortalBbsListDao.selectUserPw" parameterClass="params" resultClass="record">
         SELECT A.USER_PW   AS "userPw"
           FROM TB_BBS_LIST  A
           JOIN TB_BBS_ADMIN B
             ON B.BBS_CD     = A.BBS_CD
            AND B.USE_YN     = 'Y'
          WHERE A.BBS_CD     = #bbsCd:VARCHAR#
            AND A.SEQ        = #seq:NUMERIC#
            AND A.DEL_YN     = 'N'
    </select>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 비밀글 여부를 조회한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <select id="PortalBbsListDao.selectSecretYn" parameterClass="params" resultClass="record">
         SELECT A.SECRET_YN AS "secretYn",
                A.USER_CD   AS "userCd",
                A.USER_PW   AS "userPw"
           FROM TB_BBS_LIST  A
           JOIN TB_BBS_ADMIN B
             ON B.BBS_CD     = A.BBS_CD
            AND B.USE_YN     = 'Y'
          WHERE A.BBS_CD     = #bbsCd:VARCHAR#
            AND A.SEQ        = #seq:NUMERIC#
            AND A.DEL_YN     = 'N'
    </select>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용을 조회한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <select id="PortalBbsListDao.selectBbsList" parameterClass="params" resultClass="record">
         SELECT A.BBS_CD                                   AS "bbsCd",
                A.SEQ                                      AS "seq",
                A.LIST_SUB_CD                              AS "listSubCd",
                (
                    SELECT C.DITC_NM
                      FROM TB_COMM_CODE      C
                     WHERE C.GRP_CD          = B.LIST_CD
                       AND C.DITC_CD         = A.LIST_SUB_CD
                )                                          AS "listSubNm",
                A.LIST1_SUB_CD                              AS "list1SubCd",
                (
                    SELECT C.DITC_NM
                      FROM TB_COMM_CODE      C
                     WHERE C.GRP_CD          = B.LIST1_CD
                       AND C.DITC_CD         = A.LIST1_SUB_CD
                )                                          AS "list1SubNm",
                (
                     SELECT MIN(C.FILE_SEQ)
                       FROM TB_BBS_FILE      C
                      WHERE C.BBS_CD         = A.BBS_CD
                        AND C.SEQ            = C.SEQ
                        AND C.TOP_YN         = 'Y'
                        AND C.DEL_YN         = 'N'
                )                                          AS "fileSeq",
                A.BBS_TIT                                  AS "bbsTit",
                (
                     SELECT AVG(C.APPR_VAL)
                       FROM TB_BBS_LIST_APPR C
                      WHERE C.BBS_CD         = A.BBS_CD
                        AND C.SEQ            = A.SEQ
                )                                          AS "apprVal",
                A.BBS_CONT                                 AS "bbsCont",
                B.HTML_YN                                  AS "htmlYn",
                A.VIEW_CNT                                 AS "viewCnt",
                A.FILE_CNT                                 AS "fileCnt",
                A.LINK_CNT                                 AS "linkCnt",
                A.INF_CNT                                  AS "infCnt",
                A.SECRET_YN                                AS "secretYn",
                CASE
                WHEN A.USER_CD IS NOT NULL
                THEN CASE A.USER_CD
                     WHEN #regId:NUMERIC#
                     THEN 'N'
                     ELSE 'Y'
                     END
                ELSE 'P'
                END                                        AS "lockTag",
                A.USER_CD                                  AS "userCd",
                A.USER_PW                                  AS "userPw",
                A.USER_NM                                  AS "userNm",
                A.USER_TEL                                 AS "userTel",
                REGEXP_SUBSTR(A.USER_TEL,   '[^-]+', 1, 1) AS "userTel1",
                REGEXP_SUBSTR(A.USER_TEL,   '[^-]+', 1, 2) AS "userTel2",
                REGEXP_SUBSTR(A.USER_TEL,   '[^-]+', 1, 3) AS "userTel3",
                A.USER_EMAIL                               AS "userEmail",
                REGEXP_SUBSTR(A.USER_EMAIL, '[^@]+', 1, 1) AS "userEmail1",
                REGEXP_SUBSTR(A.USER_EMAIL, '[^@]+', 1, 2) AS "userEmail2",
                NVL((
                     SELECT C.DITC_CD
                       FROM TB_COMM_CODE     C
                      WHERE C.GRP_CD         = 'C1009'
                        AND C.DITC_CD        = REGEXP_SUBSTR(A.USER_EMAIL, '[^@]+', 1, 2)
                ), 'na')                                   AS "userEmail3",
                TO_CHAR(A.USER_DTTM, 'YYYY-MM-DD')         AS "userDttm",
                TO_CHAR(A.ACPT_DTTM, 'YYYY-MM-DD')         AS "acptDttm",
                A.APPR_NM                                  AS "apprNm",
                A.APPR_TEL                                 AS "apprTel",
                TO_CHAR(A.APPR_DTTM, 'YYYY-MM-DD')         AS "apprDttm",
                A.ANS_STATE                                AS "ansState",
                FN_GET_BBSANS_NM(B.ANS_TAG , ANS_STATE , 'P') AS "ansStateNm",
                A.ANS_CONT                                 AS "ansCont",
                A.PRD_CD                                   AS "prdCd",
                A.KEY_SEQ                                  AS "keySeq"
           FROM TB_BBS_LIST  A
           JOIN TB_BBS_ADMIN B
             ON B.BBS_CD     = A.BBS_CD
            AND B.USE_YN     = 'Y'
          WHERE A.BBS_CD     = #bbsCd:VARCHAR#
            AND A.SEQ        = #seq:NUMERIC#
            AND A.DEL_YN     = 'N'
            <isNotEmpty property="isMyPage">
            	<isEqual property="isMyPage" compareValue="Y">
            	AND A.USER_CD = #myUserCd:NUMERIC#
            	</isEqual>
            </isNotEmpty>
    </select>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 댓글을 검색한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <select id="PortalBbsListDao.searchBbsListByPSeq" parameterClass="params" resultClass="record">
         SELECT A.BBS_CD                           AS "bbsCd",
                A.SEQ                              AS "seq",
                A.P_SEQ                            AS "pSeq",
                A.LIST_SUB_CD                      AS "listSubCd",
                A.BBS_TIT                          AS "bbsTit",
                A.BBS_CONT                         AS "bbsCont",
                CASE
                WHEN A.USER_CD IS NOT NULL
                THEN CASE A.USER_CD
                     WHEN #regId:NUMERIC#
                     THEN 'N'
                     ELSE 'Y'
                     END
                ELSE 'P'
                END                                AS "lockTag",
                A.USER_NM                          AS "userNm",
                TO_CHAR(A.USER_DTTM, 'YYYY-MM-DD') AS "userDttm",
                A.ANS_STATE                        AS "ansState"
           FROM TB_BBS_LIST  A
           JOIN TB_BBS_ADMIN B
             ON B.BBS_CD     = A.BBS_CD
            AND B.USE_YN     = 'Y'
          WHERE A.BBS_CD     = #bbsCd:VARCHAR#
            AND A.P_SEQ      = #pSeq:NUMERIC#
            AND A.DEL_YN     = 'N'
          ORDER BY
                A.REG_DTTM ASC
    </select>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용을 등록한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <insert id="PortalBbsListDao.insertBbsList" parameterClass="params">
        <selectKey keyProperty="seq" resultClass="int">
         SELECT NVL(MAX(A.SEQ), 0) + 1
           FROM TB_BBS_LIST A
        </selectKey>
         INSERT INTO TB_BBS_LIST
                (
                    BBS_CD,
                    SEQ,
                    P_SEQ,
                    LIST_SUB_CD,
                    LIST1_SUB_CD,
                    BBS_TIT,
                    BBS_CONT,
                    FILE_CNT,
                    LINK_CNT,
                    INF_CNT,
                    SECRET_YN,
                    KEY_SEQ,
                    USER_CD,
                    USER_ID,
                    USER_NM,
                    USER_PW,
                    USER_TEL,
                    USER_EMAIL,
                    USER_DTTM,
                    ANS_STATE,
                    VIEW_CNT,
                    DEL_YN,
                    REG_ID,
                    REG_DTTM,
                    UPD_ID,
                    UPD_DTTM,
                    PRD_CD,
                    <isNotEmpty property="deptNm">
                    DEPT_NM,
                    </isNotEmpty>
                    EMAIL_YN
                )
         VALUES (
                    #bbsCd:VARCHAR#,
                    #seq:NUMERIC#,
                    NVL(#pSeq:NUMERIC#,     '0'),
                    #listSubCd:VARCHAR#,
                    #list1SubCd:VARCHAR#,
                    #bbsTit:VARCHAR#,
                    #bbsCont:VARCHAR#,
                    NVL(#fileCnt:NUMERIC#,  '0'),
                    NVL(#linkCnt:NUMERIC#,  '0'),
                    NVL(#infCnt:NUMERIC#,   '0'),
                    NVL(#secretYn:CHAR#, 'N'),
                    #keySeq:NUMERIC#,
                    #regId:NUMERIC#,
                    #userId:VARCHAR#,
                    <isEqual property="bbsCd" compareValue="GALLERY">
                    #userNm:VARCHAR#,
                    </isEqual>
                    <isNotEqual property="bbsCd" compareValue="GALLERY">
                    NVL((SELECT MAX(USER_NM) FROM TB_USER WHERE USER_CD = #regId:NUMERIC#), #userNm:VARCHAR#),
                    </isNotEqual>
                    #userPw:VARCHAR#,
                    <isEmpty property="userTel">
                    CASE
                    WHEN #userTel1:VARCHAR#   IS NOT NULL
                     AND #userTel2:VARCHAR#   IS NOT NULL
                     AND #userTel3:VARCHAR#   IS NOT NULL
                    THEN PKG_CRYPTO2.ENCRYPT(#userTel1:VARCHAR#   || '-' ||
                         #userTel2:VARCHAR#   || '-' ||
                         #userTel3:VARCHAR#)
                    END,
                    </isEmpty>
                    <isNotEmpty property="userTel">
                    	PKG_CRYPTO2.ENCRYPT(#userTel:VARCHAR#),
                    </isNotEmpty>
                    CASE
                    WHEN #userEmail1:VARCHAR# IS NOT NULL
                     AND #userEmail2:VARCHAR# IS NOT NULL
                    THEN #userEmail1:VARCHAR# || '@' ||
                         #userEmail2:VARCHAR#
                    END,
                    SYSDATE,
                    'RW',
                    '0',
                    'N',
                    #regId:VARCHAR#,
                    SYSDATE,
                    #updId:VARCHAR#,
                    SYSDATE,
                    #prdCd:VARCHAR#,
                    <isNotEmpty property="deptNm">
                    #deptNm:VARCHAR#,
                    </isNotEmpty>
                    #emailYn:CHAR#
                )
    </insert>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용을 수정한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <update id="PortalBbsListDao.updateBbsList" parameterClass="params">
         UPDATE TB_BBS_LIST   A
            SET A.LIST_SUB_CD = #listSubCd:VARCHAR#,
                A.BBS_TIT     = #bbsTit:VARCHAR#,
                A.BBS_CONT    = #bbsCont:VARCHAR#,
                A.FILE_CNT    = NVL(#fileCnt:NUMERIC#,  '0'),
                A.LINK_CNT    = NVL(#linkCnt:NUMERIC#,  '0'),
                A.INF_CNT     = NVL(#infCnt:NUMERIC#,   '0'),
                A.SECRET_YN   = NVL(#secretYn:CHAR#, 'N'),
                A.KEY_SEQ     = #keySeq:CHAR#,
                <isEqual property="bbsCd" compareValue="GALLERY">
                A.USER_NM     = #userNm:VARCHAR#,
                </isEqual>
                <isNotEqual property="bbsCd" compareValue="GALLERY">
                A.USER_NM     = NVL((SELECT MAX(USER_NM) FROM TB_USER WHERE USER_CD = #regId:NUMERIC#), #userNm:VARCHAR#),
                </isNotEqual>
                
                A.USER_PW     = CASE
                                WHEN #newUserPw:VARCHAR#  IS NOT NULL
                                THEN #newUserPw:VARCHAR#
                                ELSE A.USER_PW
                                END,
                A.USER_TEL    = CASE
                                WHEN #userTel1:VARCHAR#   IS NOT NULL
                                 AND #userTel2:VARCHAR#   IS NOT NULL
                                 AND #userTel3:VARCHAR#   IS NOT NULL
                                THEN PKG_CRYPTO2.ENCRYPT(#userTel1:VARCHAR#   || '-' ||
                                     #userTel2:VARCHAR#   || '-' ||
                                     #userTel3:VARCHAR#)
                                END,
                A.USER_EMAIL  = CASE
                                WHEN #userEmail1:VARCHAR# IS NOT NULL
                                 AND #userEmail2:VARCHAR# IS NOT NULL
                                THEN #userEmail1:VARCHAR# || '@' ||
                                     #userEmail2:VARCHAR#
                                END,
                A.USER_DTTM   = SYSDATE,
                A.UPD_ID      = #updId:VARCHAR#,
                A.UPD_DTTM    = SYSDATE
			<isEqual property="bbsCd" compareValue="GALLERY">
				, A.ANS_STATE = 'RW'
			</isEqual>
          WHERE A.BBS_CD      = #bbsCd:VARCHAR#
            AND A.SEQ         = #seq:NUMERIC#
		<isNotEqual property="bbsCd" compareValue="GALLERY"> 
            AND A.ANS_STATE   = 'RW'
        </isNotEqual>
            AND A.DEL_YN      = 'N'
    </update>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용 조회수를 수정한다.                                      -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <update id="PortalBbsListDao.updateBbsListViewCnt" parameterClass="params">
         UPDATE TB_BBS_LIST A
            SET A.VIEW_CNT  = NVL(A.VIEW_CNT, 0) + 1
          WHERE A.BBS_CD    = #bbsCd:VARCHAR#
            AND A.SEQ       = #seq:NUMERIC#
            AND A.DEL_YN    = 'N'
    </update>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용 첨부파일수를 수정한다.                                  -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <update id="PortalBbsListDao.updateBbsListFileCnt" parameterClass="params">
         UPDATE TB_BBS_LIST A
            SET A.FILE_CNT  = (
                                   SELECT COUNT(B.FILE_SEQ)
                                     FROM TB_BBS_FILE B
                                    WHERE B.BBS_CD    = A.BBS_CD
                                      AND B.SEQ       = A.SEQ
                                      AND B.DEL_YN    = 'N'
                              )
          WHERE A.BBS_CD    = #bbsCd:VARCHAR#
            AND A.SEQ       = #seq:NUMERIC#
            AND A.DEL_YN    = 'N'
    </update>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용을 삭제한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <delete id="PortalBbsListDao.deleteBbsList" parameterClass="params">
         UPDATE TB_BBS_LIST A
            SET A.DEL_YN    = 'Y',
                A.OLD_TIT   = A.BBS_TIT,
                A.UPD_ID    = #updId:VARCHAR#,
                A.UPD_DTTM  = SYSDATE
          WHERE A.BBS_CD    = #bbsCd:VARCHAR#
            AND A.SEQ       = #seq:NUMERIC#
            AND A.ANS_STATE = 'RW'
            AND A.DEL_YN    = 'N'
    </delete>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용 링크수를 수정한다.                                  -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <update id="PortalBbsListDao.updateBbsListLinkCnt" parameterClass="params">
         UPDATE TB_BBS_LIST A
            SET A.LINK_CNT  = (
                                   SELECT COUNT(B.LINK_SEQ)
                                     FROM TB_BBS_LINK B
                                    WHERE B.BBS_CD    = A.BBS_CD
                                      AND B.SEQ       = A.SEQ
                                      AND B.DEL_YN    = 'N'
                              )
          WHERE A.BBS_CD    = #bbsCd:VARCHAR#
            AND A.SEQ       = #seq:NUMERIC#
            AND A.DEL_YN    = 'N'
    </update>
    
    
    <!-- 파일 업로드시 전체 Directory 명 설정할때 bbsCd를 추가하기위해 seq를 가지고 bbsCd를 가지고 오는 Query임 -->
	<select id="PortalBbsListDAO.selectBbsCd" parameterClass="java.lang.Integer" resultClass="java.lang.String">
		SELECT BBS_CD
		FROM   TB_BBS_LIST 
		WHERE  SEQ = #seq:NUMERIC#
	</select>
	
    <update id="PortalBbsListDao.insertBbsInf" parameterClass="params">
		INSERT INTO TB_BBS_INF
		(
			BBS_CD
			, SEQ
			, INF_ID
			, DEL_YN
			, REG_ID
			, REG_DTTM
			, UPD_ID
			, UPD_DTTM
			)
			VALUES (
			  #bbsCd:VARCHAR#
			, #seq:NUMERIC#
			, #infId:VARCHAR#
			, 'N'
			, #regId:VARCHAR#
			, SYSDATE
			, #userId:VARCHAR#
			, SYSDATE
		)
	</update>
	 <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용 공공데이터수를 수정한다.                                  -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <update id="PortalBbsListDao.updateBbsListInfCnt" parameterClass="params">
         UPDATE TB_BBS_LIST A
            SET A.INF_CNT  = (
                                   SELECT COUNT(B.SEQ)
                                     FROM TB_BBS_INF B
                                    WHERE B.BBS_CD    = A.BBS_CD
                                      AND B.SEQ       = A.SEQ
                                      AND B.DEL_YN    = 'N'
                              )
          WHERE A.BBS_CD    = #bbsCd:VARCHAR#
            AND A.SEQ       = #seq:NUMERIC#
            AND A.DEL_YN    = 'N'
    </update>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- 게시판 내용을 삭제한다.                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <delete id="PortalBbsListDao.deleteBbsInf" parameterClass="params">
         DELETE FROM TB_BBS_INF
    	WHERE
    		BBS_CD = #bbsCd:VARCHAR#
    		AND SEQ = #seq:NUMERIC#
    </delete>
    <select id="PortalBbsListDao.searchBbsDvp" parameterClass="params" resultClass="record">
    SELECT DVP_EMAIL_YN		AS "dvpEmailYn"
         , DVP_HP_YN		AS "dvpHpYn"
         , DVP_KAKAO_YN		AS "dvpKakaoYn"
      FROM TB_USER
     WHERE USER_ID = #userId:VARCHAR#
    </select>
</sqlMap>