<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="portalAssmMemberSch" >
    <typeAlias alias="params" type="egovframework.common.base.model.Params" />
    <typeAlias alias="record" type="egovframework.common.base.model.Record" />
	
	<sql id="memberSch.col">
		A.EMP_NO			AS "empNo"
		, A.MONA_CD			AS "monaCd"
		, A.HG_NM			AS "hgNm"
		, A.HJ_NM			AS "hjNm"
		, A.ENG_NM			AS "engNm"
		, A.AGE           	AS "age"
		, A.SEX_GBN_NM		AS "sexGbnNm"
		, A.DEPT_IMG_URL  	AS "deptImgUrl"
		, A.POLY_CD         AS "polyCd"
		, A.POLY_NM       	AS "polyNm"
		, A.ORIG_NM       	AS "origNm"
		, A.ELECT_GBN_NM	AS "eleGbnNm"
		, A.REELE_GBN_NM	AS "reeleGbnNm"
		, A.UNIT_CD			AS "unitCd"
		, A.UNITS			AS "units"
		, A.CMIT_NM         AS "cmitNm"
		, A.CMITS         	AS "cmits"
		, A.TEL_NO        	AS "telNo"
		, A.E_MAIL        	AS "eMail"
		, A.HOMEPAGE      	AS "homepage"
		, A.STAFF         	AS "staff"
		, A.SECRETARY      	AS "secretary"
		, A.SECRETARY2      AS "secretary2"
		, A.BTH_DATE		AS "bthDate"
		, A.UNIT_NM         AS "unitNm"
		, A.LINK_URL		AS "linkUrl"
		, NVL(A.OPEN_NA_ID, REPLACE(A.ENG_NM, ' ', '')) AS "openNaId"
	</sql>
	<sql id="memberSch.where">
		<dynamic prepend="WHERE ">
		<!-- <isEmpty property="schUnitCd" prepend=" AND ">
			A.STATUS_YN = 'Y'
		</isEmpty> -->
		
		<isNotEmpty property="statusCd" prepend=" AND ">
			A.STATUS_CD <![CDATA[ <> ]]> '060001'
		</isNotEmpty>
		<isEmpty property="statusCd" prepend=" AND ">
			A.STATUS_CD = '060001'
		</isEmpty>
		
		<isNotEmpty property="schUnitCd" prepend=" AND ">
			A.UNIT_CD = #schUnitCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="schHgNm" prepend=" AND ">
			A.HG_NM LIKE '%' || #schHgNm:VARCHAR# || '%'
		</isNotEmpty>
		<isNotEmpty property="schPoly" prepend=" AND ">
			A.POLY_CD = #schPoly:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="schCmit" prepend=" AND ">
			A.EMP_NO IN (SELECT DISTINCT EMP_NO 
							 FROM  TV_THXPSN13 
                            WHERE  DEPT_CD  = #schCmit:VARCHAR#
							 AND   TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN CMIT_FR_DATE AND NVL(CMIT_TO_DATE, TO_CHAR(SYSDATE, 'YYYYMMDD'))
							 AND   UNIT_CD = A.UNIT_CD
							 AND   EMP_NO = A.EMP_NO
							 )
		</isNotEmpty>
		<isNotEmpty property="schUpOrig" prepend=" AND ">
			A.UP_ORIG_CD = #schUpOrig:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="schOrig" prepend=" AND ">
			A.ORIG_CD = #schOrig:VARCHAR#
		</isNotEmpty>
	<!-- 	
		지역, 동 구분처리
		<isNotEmpty property="schOrigGubun">
			<isEqual property="schOrigGubun" compareValue="area">
				<isNotEmpty property="schUpOrig" prepend=" AND ">
					A.UP_ORIG_CD = #schUpOrig:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="schOrig" prepend=" AND ">
					A.ORIG_CD = #schOrig:VARCHAR#
				</isNotEmpty>
			</isEqual>
			<isEqual property="schOrigGubun" compareValue="dong">
				<isNotEmpty property="schUpOrig" prepend=" AND ">
				A.ORIG_CD IN (
					SELECT ELECT_CD FROM TB_NA_ELECT 
					WHERE ELECT_CD IS NOT NULL 
					AND SIDO_CD = #schUpOrig:VARCHAR#
					<isNotEmpty property="schOrig" prepend=" AND "> 
						SIGUNGU = #schOrig:VARCHAR#
					</isNotEmpty>
					<isNotEmpty property="schDongOrig" prepend=" AND "> 
						DONG_NM = #schDongOrig:VARCHAR# 
					</isNotEmpty>
				)
				</isNotEmpty>
			</isEqual>
		</isNotEmpty>
		 -->
		<isNotEmpty property="schSexGbn" prepend=" AND ">
			A.SEX_GBN = #schSexGbn:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="schAge" prepend=" AND ">
			<isEqual property="schAge" compareValue="29">
				A.AGE &lt; 30
			</isEqual>
			<isEqual property="schAge" compareValue="30">
				A.AGE BETWEEN 30 AND 39 
			</isEqual>
			<isEqual property="schAge" compareValue="40">
				A.AGE BETWEEN 40 AND 49 
			</isEqual>
			<isEqual property="schAge" compareValue="50">
				A.AGE BETWEEN 50 AND 59 
			</isEqual>
			<isEqual property="schAge" compareValue="60">
				A.AGE BETWEEN 60 AND 69 
			</isEqual>
			<isEqual property="schAge" compareValue="70">
				A.AGE &gt;= 70
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="schReeleGbn" prepend=" AND ">
			A.REELE_GBN_CD = #schReeleGbn:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="schElectGbn" prepend=" AND ">
			A.ELECT_GBN_CD = #schElectGbn:VARCHAR#
		</isNotEmpty>
		</dynamic>
	</sql>
	
	<!-- 국회의원 공통코드 -->
	<select id="assmMemberSchDao.searchAssmMembCommCd" parameterClass="params" resultClass="record">
		/* sql id : assmMemberSchDao.searchAssmMembCommCd */
		SELECT DTL_NO		AS "code"
			 , UP_DTL_NO	AS "upCode"
		  	 , DTL_NM		AS "name"
		FROM   TV_THXCOD00	
		WHERE  USE_YN = 1
		<isEmpty property="listNo">
			AND    1=2
		</isEmpty>
		<isNotEmpty property="listNo">
			AND    LIST_NO = #listNo:NUMERIC#
		</isNotEmpty>
		<isNotEmpty property="upDtlNo">
			 AND UP_DTL_NO = #upDtlNo:NUMERIC#
		</isNotEmpty>
		ORDER BY SORT_NO
	</select>	
	
	<select id="assmMemberSchDao.searchAssmMemberSchPaging" remapResults="true" parameterClass="params" resultClass="record">
		/* sql id : assmMemberSchDao.searchAssmMemberSchPaging */
		<isEqual property="paging" compareValue="0">
		SELECT AA.* 
		FROM   (SELECT ROWNUM AS ROW_NUM, AA.*
				FROM   (
		</isEqual>
		
			SELECT
			    <include refid="memberSch.col"/>
			FROM
			    TV_THXPSN01 A
			<include refid="memberSch.where"/>
		<isEqual property="paging" compareValue="0">
		<![CDATA[
				) AA
			WHERE ROWNUM <= #end:NUMERIC#
			) AA
		WHERE AA.ROW_NUM >= #start:NUMERIC#
		]]>
		</isEqual>
	</select>
	<select id="assmMemberSchDao.searchAssmMemberSchPagingCount" parameterClass="params" resultClass="int">
		/* sql id : assmMemberSchDao.searchAssmMemberSchPagingCount */
		SELECT
		    COUNT(*)
		FROM
		    TV_THXPSN01 A
		<include refid="memberSch.where"/>
	</select>
	
	<!-- 현직 국회의원 회차의 재적수를 구한다. -->
	<select id="assmMemberSchDao.searchAssmMemberAllCnt" resultClass="int">
		/* sql id : assmMemberSchDao.searchAssmMemberAllCnt */
		SELECT NVL(COUNT(*), 0)
		FROM   TV_THXPSN01
		WHERE  STATUS_YN = 'Y'
	</select>
	
	<!-- 대수에 맞는 국회의원 재적수를 조회한다. -->
	<select id="assmMemberSchDao.searchAssmHistMemberAllCnt" parameterClass="params" resultClass="int">
		/* sql id : assmMemberSchDao.searchAssmHistMemberAllCnt */
		SELECT NVL(COUNT(*), 0)
		FROM   TV_THXPSN01
		WHERE  UNIT_CD = #unitCd:VARCHAR#
	</select>
	
	<!-- 우편번호 선거구 매핑정보 -->
	<select id="assmMemberSchDao.searchAssmNaElectCd" parameterClass="params" resultClass="record">
		/* sql id : assmMemberSchDao.searchAssmNaElectCd */
		<!-- 시군구 조회 -->
		<isEqual property="gubun" compareValue="sigungu">
			SELECT 	DISTINCT SIGUNGU AS "code", SIGUNGU	AS "name"
			FROM   TB_NA_ELECT
			WHERE  ELECT_CD IS NOT NULL
			AND    SIDO_CD = #sidoCd:VARCHAR#
			ORDER BY SIGUNGU
		</isEqual>
		<!-- 동 조회 -->
		<isEqual property="gubun" compareValue="dong">
			SELECT 	DISTINCT DONG_NM AS "code", DONG_NM	AS "name"
			FROM   TB_NA_ELECT
			WHERE  ELECT_CD IS NOT NULL
			AND    SIDO_CD = #sidoCd:VARCHAR#
			AND    SIGUNGU = #sigungu:VARCHAR#
			ORDER BY DONG_NM
		</isEqual>
		<isEqual property="gubun" compareValue="N">
			SELECT SIGUNGU AS CODE FROM TB_NA_ELECT WHERE 1=2
		</isEqual>
	</select>
	
</sqlMap>
