<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="CommUsrAdmin">
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<resultMap id="CommUsrList" class="egovframework.admin.basicinf.service.CommUsr">
		<result property="usrCd"      column="USR_CD"       />
		<result property="usrNm"      column="USR_NM"       />
		<result property="orgCd"      column="ORG_CD"       />
		<result property="accYn"      column="ACC_YN"       />
		<result property="accCd"      column="ACC_CD"       />
	</resultMap>
	
	<resultMap id="commUsrAdminPosPopList" class="egovframework.admin.basicinf.service.CommUsrAdmin">
		<result property="usrCd"   			column="USR_CD"/>
		<result property="usrNm"   			column="USR_NM"/>
		<result property="usrNmEng"   		column="ENG_USR_NM"/>
		<result property="orgCd"   			column="ORG_CD"/>
		<result property="orgNm"   			column="ORG_NM"/>
		<result property="jobCd"			column="JOB_CD"/>
	</resultMap>
	
	<resultMap id="commUsrAdminPopList" class="egovframework.admin.basicinf.service.CommUsrAdmin">
		<result property="usrCd"   			column="USR_CD"/>
		<result property="usrNm"   			column="USR_NM"/>
		<result property="usrNmEng"   		column="ENG_USR_NM"/>
		<result property="orgCd"   			column="ORG_CD"/>
		<result property="orgNm"   			column="ORG_NM"/>
	</resultMap>
	
	<resultMap id="commUsrAdminInitialPw" class="egovframework.admin.basicinf.service.CommUsrAdmin">
		<result property="initialPw"   		column="INITIAL_PW"/>
	</resultMap>
	
	<resultMap id="commUsrAdminList" class="egovframework.admin.basicinf.service.CommUsrAdmin">
		<result property="usrCd"   			column="USR_CD"/>
		<result property="usrId"   			column="USR_ID"/>
		<result property="usrNm"   			column="USR_NM"/>
		<result property="usrNmEng"   		column="ENG_USR_NM"/>
		<result property="orgCd"      		column="ORG_CD"/>
		<result property="orgNm"      		column="ORG_NM"/>
		<result property="jobNm"      		column="JOB_NM"/>
		<result property="accCd"      		column="ACC_CD"/>
		<result property="accNm"      		column="ACC_NM"/>
		<result property="usrTel"      		column="USR_TEL"/>
		<result property="accokYn"      	column="ACCOK_YN"/>
		<result property="accokDttm"     	column="ACCOK_DTTM"/>
		<result property="deptNm"     	column="DEPT_NM"/>
		<result property="jobCd"     	column="JOB_CD"/>
	</resultMap>
	
	<resultMap id="commUsrAdminDtlInfo" class="egovframework.admin.basicinf.service.CommUsrAdmin">
		<result property="usrId"   			column="USR_ID"/>
		<result property="usrNm"   			column="USR_NM"/>
		<result property="usrCd"   			column="USR_CD"/>
		<result property="jobCd"      		column="JOB_CD"/>
		<result property="jobNm"      		column="JOB_NM"/>
		<result property="orgCd"      		column="ORG_CD"/>
		<result property="orgNm"      		column="ORG_NM"/>
		<result property="accCd"      		column="ACC_CD"/>
		<result property="accNm"      		column="ACC_NM"/>
		<result property="usrEmail"      	column="USR_EMAIL"/>
		<result property="emailYn"      	column="EMAIL_YN"/>
		<result property="usrTel"      		column="USR_TEL"/>
		<result property="usrHp"      		column="USR_HP"/>
		<result property="hpYn"      		column="HP_YN"/>
		<result property="usrPw"      		column="USR_PW"/>
		<result property="accokYn"      	column="ACCOK_YN"/>
		<result property="accokYnDesc"      column="ACCOK_YN_DESC"/>
		<result property="accokDttm"     	column="ACCOK_DTTM"/>
		<result property="usrPki"     		column="USR_PKI" jdbcType="VARCHAR"/>
		<result property="pkiDttm"     		column="PKI_DTTM"/>
		<result property="hpYn"     		column="HP_YN"/>
		<result property="deptNm"     		column="DEPT_NM"/>
		<result property="usrWork" 			column="USR_WORK"/>
		<result property="notiHhCd" 		column="NOTI_HH_CD"/>
		<result property="notiStartHh" 		column="NOTI_START_HH"/>
		<result property="notiEndHh" 		column="NOTI_END_HH"/>
		<result property="notiHh" 			column="NOTI_HH"/>
	</resultMap>	
	
	<select id="CommUsrDAO.selectCommUsrAdminCheck" parameterClass="egovframework.admin.basicinf.service.CommUsr" resultMap="CommUsrList" >
			SELECT   USR_CD
					,USR_NM
			        ,ORG_CD         
			        ,ACC_YN
			        ,ACC_CD
		  FROM TB_COMM_USR
		 WHERE USR_ID = #usrId:VARCHAR#
		   AND USE_YN ='Y'
		   AND ACC_YN ='Y'
	</select>
	
	<!-- 직원명 팝업 조회 -->
	<select id="CommUsrAdminDAO.selectCommUsrAdminPopList" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin" resultMap="commUsrAdminPopList" >
		SELECT   USR_CD
		       , USR_NM
		       , ENG_USR_NM
		       , US.ORG_CD
		       , ORG.ORG_NM
		       
		  FROM   TB_COMM_USR US INNER JOIN TB_COMM_ORG ORG
		                          ON US.ORG_CD = ORG.ORG_CD
		                         AND ORG.USE_YN = 'Y'
		 WHERE   1=1
		   AND   US.USE_YN = 'Y'
		   		<isEqual property="usrGb" compareValue="1" >
				   AND   US.ACCOK_YN = 'N'		
		   		</isEqual>
		   		<isNotEmpty property="usrNm" prepend="AND">
					USR_NM LIKE '%'||#usrNm#||'%'
				</isNotEmpty>
				<isNotEmpty property="orgCd">
					AND US.ORG_CD = #orgCd#
				</isNotEmpty>
	</select> 	
	
	<!-- 직원명 팝업 조회 직책추가버전-->
	<select id="CommUsrAdminDAO.selectCommUsrAdminPosPopList" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin" resultMap="commUsrAdminPosPopList" >
		SELECT   USR_CD
		       , USR_NM
		       , ENG_USR_NM
		       , US.ORG_CD
		       , ORG.ORG_NM
		       , JOB_CD
		  FROM   TB_COMM_USR US INNER JOIN TB_COMM_ORG ORG
		                          ON US.ORG_CD = ORG.ORG_CD
		                         AND ORG.USE_YN = 'Y'
		 WHERE   1=1
		   AND   US.USE_YN = 'Y'
		   		<isEqual property="usrGb" compareValue="1" >
				   AND   US.ACCOK_YN = 'N'		
		   		</isEqual>
		   		<isNotEmpty property="usrNm" prepend="AND">
					USR_NM LIKE '%'||#usrNm#||'%'
				</isNotEmpty>
				<isNotEmpty property="orgCd">
					AND US.ORG_CD IN (
						SELECT A.ORG_CD FROM TB_COMM_ORG A 
						START WITH A.ORG_CD = #orgCd#
						CONNECT BY PRIOR A.ORG_CD = A.PAR_ORG_CD 
					) 
				</isNotEmpty>
	</select> 
	
	<!-- 직원명 전체리스트 -->
	<select id="CommUsrAdminDAO.selectCommUsrAdminListAll" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin" resultMap="commUsrAdminList" >
		SELECT   USR_CD
		       , USR_NM
		       , ENG_USR_NM
		       , USR_ID 
		       , JOB_CD
		       , C1.DITC_NM JOB_NM
		       , US.ORG_CD
		       , ORG.ORG_NM AS ORG_NM
		       , ACC_CD
		       , C2.DITC_NM ACC_NM
		       , pkg_crypto2.decrypt(USR_TEL) AS USR_TEL
		       , DECODE(US.ACCOK_YN, 'Y', 1, 0) ACCOK_YN
		       , ACCOK_DTTM
		       , DEPT.ORG_NM AS DEPT_NM
		  FROM   TB_COMM_USR US LEFT JOIN TB_COMM_CODE C1
		                         ON US.JOB_CD = C1.DITC_CD
		                        AND C1.GRP_CD = 'C1003' 
		                        LEFT JOIN TB_COMM_CODE C2
		                         ON US.ACC_CD = C2.DITC_CD
		                        AND C2.GRP_CD = 'C1002'
		                        LEFT OUTER JOIN TB_COMM_ORG DEPT
		                         ON US.ORG_CD = DEPT.ORG_CD
		                        AND DEPT.USE_YN = 'Y'
		                        LEFT OUTER JOIN TB_COMM_ORG ORG
		                         ON DEPT.TOP_ORG_CD = ORG.ORG_CD
		                        AND ORG.USE_YN = 'Y'
		 WHERE   1=1
		 	AND  US.ACC_YN = 'Y'
		 		 <isNotEmpty property="searchWord" >
					 AND US.USR_NM LIKE '%'||#searchWord#||'%'
				 </isNotEmpty>
				 <isNotEmpty property="accCd" >
				 	AND US.ACC_CD = #accCd:VARCHAR#
				 </isNotEmpty>
				 <isNotEmpty property="orgNm" >
				 	AND US.ORG_CD in 
						(
							SELECT ORG_CD
							FROM TB_COMM_ORG
							START WITH ORG_NM LIKE '%' || #orgNm# || '%'   AND USE_YN = 'Y'
							CONNECT BY PRIOR ORG_CD =  PAR_ORG_CD AND USE_YN = 'Y'
						)
				 </isNotEmpty>
		   		 <isEqual property="accokYn" compareValue="Y" >
					 AND ACCOK_YN = 'Y'
				 </isEqual>	
				 <isEqual property="accokYn" compareValue="N" >
					 AND ACCOK_YN = 'N'
				 </isEqual>
			 	<isEqual property="isAdmin" compareValue="0">
			 		AND US.ACC_CD != 'SYS'
			 	</isEqual>
					ORDER  BY US.ORG_CD
				
	</select>
	
	<!-- 직원명 전체리스트 갯수 -->
	<select id="CommUsrAdminDAO.selectCommUsrAdminListAllCnt" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin" resultClass="java.lang.Integer">
		SELECT   COUNT(*)
		  FROM   TB_COMM_USR US LEFT JOIN TB_COMM_CODE C1
		                         ON US.JOB_CD = C1.DITC_CD
		                        AND C1.GRP_CD = 'C1003' 
		                        LEFT JOIN TB_COMM_CODE C2
		                         ON US.ACC_CD = C2.DITC_CD
		                        AND C2.GRP_CD = 'C1002'
		                        LEFT OUTER JOIN TB_COMM_ORG DEPT
		                         ON US.ORG_CD = DEPT.ORG_CD
		                        AND DEPT.USE_YN = 'Y'
		                        LEFT OUTER JOIN TB_COMM_ORG ORG
		                         ON DEPT.TOP_ORG_CD = ORG.ORG_CD
		                        AND ORG.USE_YN = 'Y'
		 WHERE   1=1
		 	AND  US.ACC_YN = 'Y'
		 		 <isNotEmpty property="searchWord" >
					 AND US.USR_NM LIKE '%'||#searchWord#||'%'
				 </isNotEmpty>
				 <isNotEmpty property="accCd" >
				 	AND US.ACC_CD = #accCd#
				 </isNotEmpty>
				 <isNotEmpty property="orgNm" >
				 	AND US.ORG_CD in 
						(
							SELECT ORG_CD
							FROM TB_COMM_ORG
							START WITH ORG_NM LIKE '%' || #orgNm# || '%'   AND USE_YN = 'Y'
							CONNECT BY PRIOR ORG_CD =  PAR_ORG_CD AND USE_YN = 'Y'
						)
				 </isNotEmpty>
		   		 <isEqual property="accokYn" compareValue="Y" >
					 AND ACCOK_YN = 'Y'
				 </isEqual>	
				 <isEqual property="accokYn" compareValue="N" >
					 AND ACCOK_YN = 'N'
				 </isEqual>
				 <isEqual property="isAdmin" compareValue="0">
			 		AND US.ACC_CD != 'SYS'
			 	 </isEqual>
	</select>
	
	<!-- 직원명ID 중복체크 -->
	<select id="CommUsrAdminDAO.idDup" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin" resultClass="java.lang.Integer">
		SELECT   COUNT(*)
		  FROM   TB_COMM_USR
		 WHERE   USR_ID = #usrId:VARCHAR#
	</select>
	
	<!-- 직원 단건조회 -->
	<select id="CommUsrAdminDAO.selectCommUsrAdminDtlInfo" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin" resultMap="commUsrAdminDtlInfo" >
<![CDATA[
		SELECT   USR_NM
		       , USR_ID 
		       , USR_CD
			   , JOB_CD
		       , C1.DITC_NM JOB_NM
		       , US.ORG_CD
		       , ORG.ORG_NM AS ORG_NM
		       , ACC_CD
		       , C2.DITC_NM ACC_NM
		       , pkg_crypto2.decrypt(USR_EMAIL) AS USR_EMAIL
		       , EMAIL_YN
		       , HP_YN
		       , pkg_crypto2.decrypt(USR_TEL) AS USR_TEL
		       , pkg_crypto2.decrypt(USR_HP) AS USR_HP
		       , HP_YN
		       , DECODE(US.ACCOK_YN, 'Y', '사용', '미사용') ACCOK_YN_DESC
		       , '' USR_PW
		       , ACCOK_YN
		       , DECODE(NVL(TO_CHAR(ACCOK_DTTM, 'YYYY/MM/DD HH24:MI:SS'), 'N'), 'N', '미승인', TO_CHAR(ACCOK_DTTM, 'YYYY/MM/DD HH24:MI:SS')) ACCOK_DTTM
		       , DECODE(NVL(USR_PKI, 'N'), 'N', '미등록', '등록') USR_PKI
		       , DECODE(NVL(TO_CHAR(PKI_DTTM, 'YYYY/MM/DD HH24:MI:SS'), 'N'), 'N', '', '(등록일자 : ' || TO_CHAR(PKI_DTTM, 'YYYY/MM/DD HH24:MI:SS') || ')') PKI_DTTM
		       , DEPT.ORG_NM AS DEPT_NM
		       , USR_WORK
		       , NOTI_HH_CD
			   , NOTI_START_HH
			   , NOTI_END_HH
			   , C3.DITC_NM || ' ' || NOTI_START_HH || '시 ~ ' || NOTI_END_HH || '시' AS NOTI_HH
		  FROM   TB_COMM_USR US LEFT JOIN TB_COMM_CODE C1
		                         ON US.JOB_CD = C1.DITC_CD
		                        AND C1.GRP_CD = 'C1003' 
		                        LEFT JOIN TB_COMM_CODE C2
		                         ON US.ACC_CD = C2.DITC_CD
		                        AND C2.GRP_CD = 'C1002'
		                        LEFT OUTER JOIN TB_COMM_ORG DEPT
		                         ON US.ORG_CD = DEPT.ORG_CD
		                        AND DEPT.USE_YN = 'Y'
		                        LEFT OUTER JOIN TB_COMM_ORG ORG
		                         ON DEPT.TOP_ORG_CD = ORG.ORG_CD
		                        AND ORG.USE_YN = 'Y'
		                       LEFT JOIN TB_COMM_CODE C3
		                         ON US.NOTI_HH_CD = C3.DITC_CD
		                        AND C3.GRP_CD = 'C1025'
		 WHERE   1=1
		   AND   USR_CD = #usrCd:NUMERIC#
		]]>
</select>
	
	<!-- 신규등록(승인도 같이 처리함) -->
	<update id="CommUsrAdminDAO.save" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin">
		UPDATE   TB_COMM_USR USR
		   SET   USR_ID = #usrId:VARCHAR#
		       , ACC_CD = #accCd:VARCHAR#
		       , ACCOK_YN = 'Y'
		       , ACCOK_DTTM = SYSDATE
		       , ACCOK_USR_ID = #sessionUsrId:VARCHAR#
		       , ACC_YN = 'Y'
		       , USR_PW = #usrPw:VARCHAR#
		       , PW_DTTM = SYSDATE
		       , UPD_ID = #sessionUsrId:VARCHAR#
		       , UPD_DTTM = SYSDATE
		 WHERE   USR_CD = #usrCd:NUMERIC#
	</update>
	
	<!-- 담당자 승인 -->
	<update id="CommUsrAdminDAO.approval" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin">
		UPDATE   TB_COMM_USR USR
		   SET   ACCOK_YN = 'Y'
		       , ACCOK_DTTM = SYSDATE
		       , ACCOK_USR_ID = #sessionUsrId:VARCHAR#
		       , ACC_YN = 'Y'
		       , UPD_ID = #sessionUsrId:VARCHAR#
		       , UPD_DTTM = SYSDATE
		 WHERE   USR_CD = #usrCd:NUMERIC#
	</update>
	
	<!-- 담당자 승인 취소 -->
	<update id="CommUsrAdminDAO.approvalCancel" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin">
		UPDATE   TB_COMM_USR USR
		   SET   ACCOK_YN = 'N'
		       , ACCOK_CN_DTTM = SYSDATE
		       , ACCOK_DTTM = ''
		       , ACCOK_USR_ID = #sessionUsrId:VARCHAR#
		       , ACC_YN = 'N'
		       , UPD_ID = #sessionUsrId:VARCHAR#
		       , UPD_DTTM = SYSDATE
		 WHERE   USR_CD = #usrCd:NUMERIC#
	</update>
	
	<!-- 내용 변경 -->
	<update id="CommUsrAdminDAO.update" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin">
		UPDATE   TB_COMM_USR USR
		   SET   ACC_CD = #accCd:VARCHAR#
		       , UPD_ID = #sessionUsrId:VARCHAR#
		       , UPD_DTTM = SYSDATE
		 WHERE   USR_CD = #usrCd:NUMERIC#
	</update>
	
	<!-- 비밀번호 초기화 랜덤문자 조회 -->
	<select id="CommUsrAdminDAO.randomPw" resultClass="java.lang.String">
		SELECT DBMS_RANDOM.STRING('X', 10) AS INITIAL_PW FROM DUAL
	</select>
	
	<!-- 비밀번호 초기화 -->
	<update id="CommUsrAdminDAO.initialPw" parameterClass="egovframework.admin.basicinf.service.CommUsrAdmin">
		UPDATE   TB_COMM_USR USR
		   SET   USR_PW = #initialPw:VARCHAR#
		       , PW_DTTM = SYSDATE
		       , FAIL_CNT = 0
		       , UPD_ID = #sessionUsrId:VARCHAR#
		       , UPD_DTTM = SYSDATE
		 WHERE   USR_CD = #usrCd:NUMERIC#
	</update>
	
</sqlMap>
