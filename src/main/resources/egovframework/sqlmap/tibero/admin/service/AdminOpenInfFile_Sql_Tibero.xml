<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- 공공데이터 파일서비스 등록 관련 SQL 파일이다.  	                     -->
<!--                                                                         -->
<!-- @author JHKIM                                                        	 -->
<!-- @version 1.0 2020/01/06                                                 -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<sqlMap namespace="OpenInfFile">
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Type Alias                                                          -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <typeAlias alias="params" type="egovframework.common.base.model.Params" />
    <typeAlias alias="record" type="egovframework.common.base.model.Record" />
    
    <!-- 서비스 목록 WHERE절 -->
    <sql id="OpenInfFile.where">
	    WHERE A.OPEN_SRV LIKE '%F%'
    	<isNotEmpty property="accCd">
			<isNotEqual property="accCd" compareValue="SYS">
				AND EXISTS (SELECT 1 FROM TB_OPEN_INF_USR 
						WHERE  INF_ID = A.INF_ID
						AND    USE_YN = 'Y'
						<![CDATA[
						AND    PRSS_ACC_CD >= 30
						]]>
					<isEmpty property="SysInpGbn">
						AND	USR_CD = #inpUsrCd:NUMERIC#
					</isEmpty>
					<isNotEmpty property="SysInpGbn">
						<isEqual property="SysInpGbn" compareValue="ORG">
							AND ORG_CD = #inpOrgCd:VARCHAR# 
						</isEqual>
						<isEqual property="SysInpGbn" compareValue="USR">
							AND	USR_CD = #inpUsrCd:NUMERIC#	
						</isEqual>
					</isNotEmpty>	
					 )
			</isNotEqual>
		</isNotEmpty>
    	<isNotEmpty property="searchWord" >
	    	<isEmpty property="searchGubun">
	    		AND (A.INF_NM LIKE '%'||#searchWord#||'%' OR A.DT_NM LIKE '%'||#searchWord#||'%' OR A.SCHW_TAG_CONT  LIKE '%'||#searchWord#||'%')
	    	</isEmpty>
			<isEqual property="searchGubun" compareValue="INF">
				AND A.INF_NM LIKE '%'||#searchWord#||'%'
			</isEqual>
			<isEqual property="searchGubun" compareValue="DT">
				AND A.DT_NM LIKE '%'||#searchWord#||'%'
			</isEqual>
			<isEqual property="searchGubun" compareValue="TAG">
				AND A.SCHW_TAG_CONT LIKE '%'||#searchWord#||'%'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="infState">
			AND A.INF_STATE = #infState#
		</isNotEmpty>
    </sql>
        
    <!-- 서비스 목록 조회 -->    
	<select id="OpenInfFile.selectOpenInfSrvList" parameterClass="params" resultClass="record">
		/* sql id : OpenInfFile.selectOpenInfSrvList */
		SELECT A.INF_ID	AS "infId", 
		       A.SEQ	AS "seq",
		       NVL((SELECT INF_SEQ FROM TB_OPEN_INF_SRV WHERE INF_ID = A.INF_ID AND SRV_CD = 'F'), 1) AS "infSeq",
		       A.DT_NM	AS "dtNm", 
		       A.INF_NM	AS "infNm", 
		       A.CCL_NM	AS "cclNm", 
		       A.CATE_NM	AS "cateNm", 
		       A.DS_ID		AS "dsId", 
		       (CASE 
	               WHEN A.CATE2_ID IS NOT NULL 
	               THEN A.CATE_FULLNM || ', ' || A.CATE2_FULLNM 
	               ELSE A.CATE_FULLNM 
	           END ) AS "cateFullnm", 
		       A.ORG_NM	AS "orgNm", 
		       A.USR_NM	AS "usrNm", 
		       A.USE_ORG_CNT	AS "useOrgCnt", 
		       A.USR_WORK 		AS "useDeptNm", 
		       CASE A.INF_STATE 
		           WHEN 'N' 
		           THEN '미개방' 
		           WHEN 'Y' 
		           THEN '개방' 
		           WHEN 'X' 
		           THEN '개방불가' 
		           WHEN 'C' 
		           THEN '개방취소' 
		           ELSE A.INF_STATE 
		       END AS "infState", 
		       A.SCHW_TAG_CONT AS "schwTagCont", 
		       TO_CHAR(A.OPEN_DTTM,'YYYY-MM-DD') AS "openDttm", 
		       A.DATA_DTTM_CONT AS "dataDttmCont", 
		       FN_GET_OPEN_SRV_HTML(A.OPEN_SRV) AS "openSrv" , 
		       NVL((SELECT 'Y' 
	                FROM TB_OPEN_DSCOL 
	                WHERE DS_ID = A.DS_ID 
	                AND COL_ID = 'EMD_NM'), 'N') AS "emdYn", 
		       A.FVT_DATA_ORDER 	AS "fvtDataOrder"
		FROM   TV_MNG_INF A
		<include refid="OpenInfFile.where" />
		ORDER  BY A.OPEN_DTTM DESC, A.SEQ DESC
	</select>
	
	<select id="OpenInfFile.selectOpenInfSrvListCount" parameterClass="params" resultClass="int">
		/* sql id : OpenInfFile.selectOpenInfSrvListCount */
		SELECT COUNT(*)
		FROM   TV_MNG_INF A
		<include refid="OpenInfFile.where" />
	</select>
	
	<!-- 서비스 상세 조회 -->
	<select id="OpenInfFile.selectOpenInfSrvDtl" parameterClass="params" resultClass="record">
		/* sql id : OpenInfFile.selectOpenInfFileDtl */
		SELECT A.INF_ID	AS "infId", 
			   A.SEQ	AS "seq",
			   NVL((SELECT INF_SEQ FROM TB_OPEN_INF_SRV WHERE INF_ID = A.INF_ID AND SRV_CD = 'F'), 1) AS "infSeq",
		       A.DT_NM	AS "dtNm", 
		       A.INF_NM	AS "infNm", 
		       A.CCL_NM	AS "cclNm", 
		       A.CATE_NM	AS "cateNm", 
		       A.DS_ID		AS "dsId", 
		       (CASE 
	               WHEN A.CATE2_ID IS NOT NULL 
	               THEN A.CATE_FULLNM || ', ' || A.CATE2_FULLNM 
	               ELSE A.CATE_FULLNM 
	           END ) AS "cateFullnm", 
		       A.ORG_NM	AS "orgNm", 
		       A.USR_NM	AS "usrNm", 
		       A.USE_ORG_CNT	AS "useOrgCnt", 
		       A.USR_WORK 		AS "useDeptNm", 
		       CASE A.INF_STATE 
		           WHEN 'N' 
		           THEN '미개방' 
		           WHEN 'Y' 
		           THEN '개방' 
		           WHEN 'X' 
		           THEN '개방불가' 
		           WHEN 'C' 
		           THEN '개방취소' 
		           ELSE A.INF_STATE 
		       END AS "infState", 
		       A.SCHW_TAG_CONT AS "schwTagCont", 
		       TO_CHAR(A.OPEN_DTTM,'YYYY-MM-DD') AS "openDttm", 
		       A.DATA_DTTM_CONT AS "dataDttmCont", 
		       FN_GET_OPEN_SRV_HTML(A.OPEN_SRV) AS "openSrv" , 
		       NVL((SELECT 'Y' 
	                FROM TB_OPEN_DSCOL 
	                WHERE DS_ID = A.DS_ID 
	                AND COL_ID = 'EMD_NM'), 'N') AS "emdYn", 
		       A.FVT_DATA_ORDER 	AS "fvtDataOrder"
		FROM   TV_MNG_INF A
		<include refid="OpenInfFile.where" />
		AND    INF_ID = #infId:VARCHAR#
	</select>
	
	<!-- 서비스 파일 목록 조회 -->
	<select id="OpenInfFile.selectOpenInfFileList" parameterClass="params" resultClass="record" >
		/* sql id : OpenInfFile.selectOpenInfFileList */
		SELECT   A.INF_ID	AS "infId"
		       , B.SEQ		AS "seq"
		       , A.INF_SEQ	AS "infSeq"
		       , A.FILE_SEQ	AS "fileSeq"
		       , A.FILE_SEQ AS "arrFileSeq"
		       , A.SRC_FILE_NM	AS "srcFileNm"
		       , A.SRC_FILE_NM||'.'||A.FILE_EXT AS "dpSrcFileNm"
		       , A.SAVE_FILE_NM	AS "saveFileNm"
		       , A.VIEW_FILE_NM	AS "viewFileNm"
		       , A.VIEW_FILE_NM||'.'||A.FILE_EXT AS "dpViewFileNm"
		       , A.FILE_SIZE	AS "fileSize"
		       <![CDATA[
		       , CASE  WHEN A.FILE_SIZE < 1024 THEN 1
                       ELSE ROUND(A.FILE_SIZE/1024, 2) END AS "fileSizeKb"
               ]]> 
		       , A.FILE_EXT	AS "fileExt"
		       , TO_CHAR(A.FT_CR_DTTM, 'YYYY-MM-DD') AS "ftCrDttm"
		       , TO_CHAR(A.LT_CR_DTTM, 'YYYY-MM-DD') AS "ltCrDttm"
		       , A.VIEW_CNT	AS "viewCnt"
		       , NVL(A.USE_YN, 'Y') AS "useYn"
		       , A.WRT_NM	AS "wrtNm"
		       , A.V_ORDER  AS "vOrder"
		  FROM   TB_OPEN_INF_FILE A INNER JOIN TB_OPEN_INF B
		                            ON  A.INF_ID = B.INF_ID						   
		 WHERE   A.INF_ID = #infId:VARCHAR#
		ORDER BY A.V_ORDER, A.LT_CR_DTTM DESC, A.FILE_SEQ DESC   
		<isNotEmpty property="popupUse" >		
		   AND   A.USE_YN = #popupUse:CHAR#
		</isNotEmpty>
	</select>	
	
	<!-- 서비스 파일 등록 -->
	<insert id="OpenInfFile.insertOpeninfFile" parameterClass="params">
		/* sql id : OpenInfFile.insertOpeninfFile */
		INSERT INTO TB_OPEN_INF_FILE (
			INF_ID
			, INF_SEQ
			, FILE_SEQ
			, FILE_CD
			, SRC_FILE_NM
			, SAVE_FILE_NM
			, VIEW_FILE_NM
			, FILE_SIZE
			, FILE_EXT
			, USE_YN
			, FT_CR_DTTM
			, REG_ID
			, WRT_NM
		)
		VALUES(
			#infId:VARCHAR#
			, #infSeq:NUMERIC#
			, #fileSeq:NUMERIC#
			, ''
			, #srcFileNm:VARCHAR#
			, #saveFileNm:VARCHAR#
			, #viewFileNm:VARCHAR#
			, #fileSize:NUMERIC#
			, #fileExt:VARCHAR#
			, #useYn:VARCHAR#
			, TO_DATE(#ftCrDttm:VARCHAR#, 'YYYY-MM-DD') 
			, #regId:VARCHAR#
			, #wrtNm:VARCHAR#
		)
	</insert>
	
	<!-- 서비스 파일 수정 -->
	<update id="OpenInfFile.updateOpeninfFile" parameterClass="params">
		/* sql id : OpenInfFile.updateOpeninfFile */
		UPDATE TB_OPEN_INF_FILE
		SET    VIEW_FILE_NM = #viewFileNm:VARCHAR#
			 , WRT_NM 		= #wrtNm:VARCHAR#
			 , FT_CR_DTTM 	= TO_DATE(#ftCrDttm:VARCHAR#, 'YYYY-MM-DD')
			 , LT_CR_DTTM 	= TO_DATE(#ltCrDttm:VARCHAR#, 'YYYY-MM-DD')
			 , USE_YN 		= #useYn:VARCHAR#
			 , UPD_ID		= #updId:NUMERIC#
			 , UPD_DTTM		= SYSDATE
		<isNotEmpty property="isFileUpd"><!-- 업로드 파일 있는경우만 수정 -->
		<isEqual property="isFileUpd" compareValue="Y">
			 , SRC_FILE_NM	= #srcFileNm:VARCHAR#
			 , SAVE_FILE_NM = #saveFileNm:VARCHAR#
			 , FILE_SIZE	= #fileSize:NUMERIC#
			 , FILE_EXT		= #fileExt:VARCHAR#
		</isEqual>
		</isNotEmpty>
		WHERE INF_ID   = #infId:VARCHAR#
		AND   FILE_SEQ = #fileSeq:NUMERIC#
		
	</update>
	
	<!-- 서비스 파일 삭제 -->
	<delete id="OpenInfFile.deleteOpeninfFile" parameterClass="params">
		/* sql id : OpenInfFile.deleteOpeninfFile */
		DELETE FROM TB_OPEN_INF_FILE 
		WHERE FILE_SEQ = #fileSeq:NUMERIC#	
	</delete>
	
	<!-- 서비스 파일 다운로드 -->
	<select id="OpenInfFile.selectOpenInfDownFile" parameterClass="params" resultClass="record">
		/* sql id : OpenInfFile.selectOpenInfDownFile */
		SELECT   A.INF_ID	AS "infId"
		       , B.SEQ		AS "seq"
		       , A.INF_SEQ	AS "infSeq"
		       , A.FILE_SEQ	AS "fileSeq"
		       , A.SAVE_FILE_NM	AS "saveFileNm"
		       , A.VIEW_FILE_NM	AS "viewFileNm"
		       , A.VIEW_FILE_NM||'.'||A.FILE_EXT AS "dpViewFileNm"
		       , A.FILE_SIZE	AS "fileSize"
		       , A.FILE_EXT	AS "fileExt"
		  FROM   TB_OPEN_INF_FILE A INNER JOIN TB_OPEN_INF B
		                            ON  A.INF_ID = B.INF_ID						   
		 WHERE   A.INF_ID = #infId:VARCHAR#
		 AND     A.FILE_SEQ = #fileSeq#
		 AND     A.USE_YN = 'Y'
	</select>	
	
	<!-- 파일서비스 순서 저장 -->
	<update id="OpenInfFile.saveOpenInfFileOrder" parameterClass="params">
		/* sql id : OpenInfFile.saveOpenInfFileOrder */
		UPDATE TB_OPEN_INF_FILE
		SET    V_ORDER  = #vOrder#
			 , UPD_ID   = #updId#
			 , UPD_DTTM = SYSDATE
		WHERE  INF_ID   = #infId#
		AND    FILE_SEQ = #fileSeq#
	</update>
	
</sqlMap>